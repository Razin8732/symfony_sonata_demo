# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.
        public: true        # Makes your service public so that it can be used from the container.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/'
        exclude:
            - '../src/DependencyInjection/'
            - '../src/Entity/'
            - '../src/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    # sonata bundle configuration

    # admin.basic_form:
    #     class: App\Admin\BasicFormAdmin
    #     tags:
    #         - { name: sonata.admin, modal_class: App\Entity\BasicForm, manager_type: orm, label: 'Basic Form' }
    admin.basic-form:
        class: App\Admin\BasicFormAdmin
        arguments: [~, App\Entity\BasicForm, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: BasicForm }
    admin.user:
        class: App\Admin\UserAdmin
        arguments: [~, App\Entity\User, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: User }
    admin.product:
        class: App\Admin\ProductAdmin
        arguments: [~, App\Entity\Product, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Product }